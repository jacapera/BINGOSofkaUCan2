>juego{
  -juego_id,
  -jugador_id,
  -
}
>sesiones{
  -sesiones_id,
  -jugador_id,
  -fecha
}
>jugadores {
  -jugador_id
}
>cartonBingo{
  -cartonBingo_id,
  -carton_numB,
  -carton_numI,
  -carton_numN,
  -carton_numG,
  -carton_numO,
  -juego_id,
  
  }


Dependencias SpringBoot
-Spring Boot DevTools   -> me sirve para cuando haga una modificacion el sistema se recarge solito
-Lombok   -> me sirve para la creacion de getter y setter
-Spring Web   ->me sirve para construir apis restful e implementación de MVC
-Spring Data JPA   ->me sirve para la consistencia de datos
-MySQL Driver   ->me sirve para conexión a base datos mysql

alter table sesion AUTO_INCREMENT=1;

spring.datasource.url=jdbc:mysql://localhost:3306/bingo
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.datasource.username=root
spring.datasource.password=C@p3r42022

# Clase a usar para conectar con la base de datos
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Dialecto a usar de SQL en este caso MySQL8
# spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

spring.jpa.hibernate.ddl-auto=update
server.port=8080

#---------------Mostrar SQL que se está ejecutando LOG -----------------------

# Formatear salida del SQL
# spring.jpa.properties.hibernate.format_sql=true

# Hacer que se muestre el SQL ejecutado
# logging.level.org.hibernate.SQL=DEBUG

# Hacer que se muestren los valores que se inyectan a la sentencis SQL
# logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE



@JoinTable( name = "jugadores_sesiones", joinColumns = @JoinColumn( name = "jugador_id"), inverseJoinColumns = @JoinColumn( name = "sesion_id"))

if(!jugador.get().getSesiones().stream().map(Sesion::getId).anyMatch(id->id.equals(sesion.getId())))  //SPRINGBOOT




